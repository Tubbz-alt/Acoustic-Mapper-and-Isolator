nViolations <- function(signal,ARL){
violations = rep(FALSE,NROW(signal))
# compute the run lenghts
signalRle <- rle(signal)
signalRunDataTable <- data.table(lengths = signalRle$lengths,values = signalRle$values)
# compute indices from the run lengths
signalRunDataTable[,rowindex := cumsum(signalRunDataTable$lengths)]
# Violdation indices
violationLocs = signalRunDataTable[lengths > ARL & values == TRUE]
for( i in NROW(violationLocs)){
for( j in seq(violationLocs[i,lengths]-ARL+1)){
violations[violationLocs[i,rowindex]+j-1] <- TRUE
}
}
return(violations)
}
test <- as.logical(sample(rep(0:1,each=10)))
nViolations(test,1)
install.packages("data.table")
install.packages("plyr")
library(data.table)
nViolations(test,1)
test
signal <- as.logical(sample(rep(0:1,each=10)))
signal <- as.logical(sample(rep(0:1,each=10)))
signalRle <- rle(signal)
signalRunDataTable <- data.table(lengths = signalRle$lengths,values = signalRle$values)
View(signalRunDataTable)
nViolations <- function(signal,ARL){
c(rep.int(F, ARL - 1), # Left padding
rollapply(signal,
width = ARL,
FUN = all(isTrue),
align = "left"))
}
signal <- as.logical(sample(rep(0:1,each=10)))
nViolations(signal,1)
install.packages("zoo")
library(zoo)
signal <- as.logical(sample(rep(0:1,each=10)))
nViolations(signal,1)
nViolations <- function(signal,ARL){
isalltrue <- function(x) {
all(isTrue(x))
}
c(rep.int(F, ARL - 1), # Left padding
rollapply(signal,
width = ARL,
FUN = isalltrue,
align = "left"))
}
nViolations(signal,1)
isTrue(1)
nViolations <- function(signal,ARL){
isalltrue <- function(x) {
all(isTRUE(x))
}
c(rep.int(F, ARL - 1), # Left padding
rollapply(signal,
width = ARL,
FUN = isalltrue,
align = "left"))
}
nViolations(signal,1)
signal
signal == nViolations(signal,1)
all(signal == nViolations(signal,1))
all(signal == nViolations(signal,1))
Final_Data_Table <- data.table("Rule_1_Region","Rule_1_Average")
library(data.table)
Final_Data_Table <- data.table("Rule_1_Region","Rule_1_Average")
View(Final_Data_Table)
Final_Data_Table <- data.table("Rule_1_Region" = 0,"Rule_1_Average" = 0)
View(Final_Data_Table)
Final_Data_Table <- data.table("Tag_ID" = 0)
View(Final_Data_Table)
Final_Data_Table <- cbind(Final_Data_Table, "Rule_1_Average" = 0)
View(Final_Data_Table)
Final_Data_Table <- data.table("Tag_ID" = 0)
paste0("Rule_",i,"_Average")
paste0("Rule_",1,"_Average")
Final_Data_Table <- data.table("Tag_ID" = 0)
for (i in 1:9){
Final_Data_Table <- cbind(Final_Data_Table, paste0("Rule_",i,"_Region") = 0,paste0("Rule_",i,"_Average") = 0)
}
Final_Data_Table <- data.table("Tag_ID" = 0)
for (i in 1:9){
Final_Data_Table <- cbind(Final_Data_Table, paste0("Rule_",i,"_Region") = 0,paste0("Rule_",i,"_Average") = 0)
}
source('~/.active-rstudio-document', echo=TRUE)
Final_Data_Table <- data.table("Tag_ID" = 0)
for (i in 1:9){Final_Data_Table <- cbind(Final_Data_Table, paste0("Rule_",i,"_Region") = 0,paste0("Rule_",i,"_Average") = 0)}
Final_Data_Table <- data.table("Tag_ID" = 0)
Final_Data_Table <- cbind(Final_Data_Table, paste0("Rule_",1,"_Region") = 0,paste0("Rule_",1,"_Average") = 0)
Final_Data_Table <- cbind(Final_Data_Table, paste0("Rule_",1,"_Region") = 0)
Final_Data_Table <- cbind(Final_Data_Table, paste0("Rule_",1,"_Region") = 0)
Final_Data_Table <- cbind(Final_Data_Table, paste0("Rule_",1,"_Region") = 0)
Final_Data_Table <- cbind(Final_Data_Table, "blah" = 0)
View(Final_Data_Table)
paste0("Rule_",1,"_Region")
Final_Data_Table <- cbind(Final_Data_Table, toString(paste0("Rule_",1,"_Region")) = 0)
Final_Data_Table <- data.table("Tag_ID" = 0)
blah <- toString(paste0("Rule_",1,"_Region"))
Final_Data_Table <- cbind(Final_Data_Table, blah = 0)
View(Final_Data_Table)
Final_Data_Table[blah := 0]
Final_Data_Table[,blah := 0]
View(Final_Data_Table)
Final_Data_Table <- data.table("Tag_ID" = 0)
Final_Data_Table[,blah := 0]
View(Final_Data_Table)
Final_Data_Table <- data.table("Tag_ID" = 0)
View(Final_Data_Table)
Final_Data_Table[,blah := 0]
View(Final_Data_Table)
Final_Data_Table[,paste0("Rule_",1,"_Region") := 0]
View(Final_Data_Table)
Final_Data_Table <- data.table("Tag_ID" = 0)
for (i in 1:9){
Final_Data_Table[,paste0("Rule_",1,"_Region") := 0]
Final_Data_Table[,paste0("Rule_",1,"_Average") := 0]
}
View(Final_Data_Table)
Final_Data_Table <- data.table("Tag_ID" = 0)
for (i in 1:9){
Final_Data_Table[,paste0("Rule_",i,"_Region") := 0]
Final_Data_Table[,paste0("Rule_",i,"_Average") := 0]
}
View(Final_Data_Table)
tag_ID_List <- c("tag1","tag2","tag3")
tag_ID_List <- c("tag1","tag2","tag3")
Final_Data_Table <- data.table("Tag_ID" = tag_ID_List)
for (i in 1:9){
Final_Data_Table[,paste0("Rule_",i,"_Region") := rep(0,length(tag_ID_List)]
Final_Data_Table[,paste0("Rule_",i,"_Average") := rep(0,length(tag_ID_List)]
}
tag_ID_List <- c("tag1","tag2","tag3")
Final_Data_Table <- data.table("Tag_ID" = tag_ID_List)
View(Final_Data_Table)
for (i in 1:9){
Final_Data_Table[,paste0("Rule_",i,"_Region") := rep(0,length(tag_ID_List)]
Final_Data_Table[,paste0("Rule_",i,"_Average") := rep(0,length(tag_ID_List)]
}
tag_ID_List <- c("tag1","tag2","tag3")
Final_Data_Table <- data.table("Tag_ID" = tag_ID_List)
for (i in 1:9){
Final_Data_Table[,paste0("Rule_",i,"_Region") := rep(0,length(tag_ID_List))]
Final_Data_Table[,paste0("Rule_",i,"_Average") := rep(0,length(tag_ID_List))]
}
View(Final_Data_Table)
install.packages("ggplot2")
library(ggplot2)
# Read in the file and break into parts
Healthy_Data <- as.data.table(read.csv('Health Fan.csv'))
Healthy_Data <- cbind(as.data.table(seq(1:dim(Healthy_Data)[1])),Healthy_Data)
colnames(Healthy_Data) <- c("Time","Values")
# Read in the file and break into parts
Healthy_Data <- as.data.table(read.csv('Health Fan.csv'))
Healthy_Data <- cbind(as.data.table(seq(1:dim(Healthy_Data)[1])),Healthy_Data)
colnames(Healthy_Data) <- c("Time","Values")
getwd()
getwd()
getwd("")
getwd()
setwd("/Users/Documents/UWA/Unearthed Hackathon/App")
setwd("/Users/Documents")
getwd()
setwd("/Users/Documents/")
setwd("/Users/kylesaltmarsh/Documents/UWA/Unearthed Hackathon/App")
setwd("/Users/kylesaltmarsh/Documents/UWA/Unearthed Hackathon/App")
# Read in the file and break into parts
Healthy_Data <- as.data.table(read.csv('Health Fan.csv'))
Healthy_Data <- cbind(as.data.table(seq(1:dim(Healthy_Data)[1])),Healthy_Data)
colnames(Healthy_Data) <- c("Time","Values")
getwd()
setwd("/Users/kylesaltmarsh/Documents/UWA/Unearthed Hackathon/App")
Healthy_Data <- as.data.table(read.csv('Health Fan.csv'))
library("data.table")
Healthy_Data <- as.data.table(read.csv('Health Fan.csv'))
Healthy_Data <- cbind(as.data.table(seq(1:dim(Healthy_Data)[1])),Healthy_Data)
colnames(Healthy_Data) <- c("Time","Values")
plot(Healthy_Data[0:1000,"Values"])
plot(Healthy_Data[0:1000],)
plot(Healthy_Data[0:1000],)
plot(Healthy_Data[0:1000,])
plot(Healthy_Data[0:1000,],type='l')
plot(Healthy_Data[0:10000,],type='l')
Healthy_Data_Sample <- Healthy_Data[0:10000,]
geom_point(aes(Time,Values), Healthy_Data_Sample, colour="gray20")
plot2 <-ggplot() +
geom_point(aes(Time,Values), Healthy_Data_Sample, colour="gray20")
plot2
library(ggplot2)
plot2 <-ggplot() +
geom_point(aes(Time,Values), Healthy_Data_Sample, colour="gray20")
plot2
plot2 <-ggplot() +
geom_line(aes(Time,Values), Healthy_Data_Sample, colour="gray20")
plot2
X<- fft(Healthy_Data_Sample[["Values"]])
length(X)
plot(seq(1:10000,X,type='l')
plot(seq(1:10000),X,type='l')
plot(seq(1:10000),X,type='l')
plot.frequency.spectrum((seq(1:10000),X,type='l')
trajectory <- c(rep(1,5),rep(2,6),rep(3,7))
plot.show(trajectory, time=2, harmonics=0:3, plot.freq=TRUE)
install.packages('sepctral')
library('sepctral')
install.packages('sepctral')
spectrum(X)
?spectrum
spectrum(X)
install.packages('installr')
plot2 <-ggplot() +
geom_line(aes(Time,Values), Healthy_Data_Sample, colour="gray20")
plot2
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
selectInput(ns('alert'), 'Was the alert correct?', c("","Yes","Yes - Incorrect Diagnosis","No - False Alert"), selected = "")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
